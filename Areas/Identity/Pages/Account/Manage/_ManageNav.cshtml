@inject SignInManager<BrunchieUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="list-group">
    <a class="list-group-item list-group-item-action @ManageNavPages.IndexNavClass(ViewContext)"
       asp-page="./Index">Profile</a>
    <a class="list-group-item list-group-item-action @ManageNavPages.EmailNavClass(ViewContext)"
       asp-page="./Email">Email</a>
    <a class="list-group-item list-group-item-action @ManageNavPages.EditUsernameNavClass(ViewContext)"
       asp-page="./EditUsername">Edit Username</a>
    <a class="list-group-item list-group-item-action @ManageNavPages.ChangePasswordNavClass(ViewContext)"
       asp-page="./ChangePassword">Password</a>


    @if (hasExternalLogins)
    {
        <a class="list-group-item list-group-item-action @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
           asp-page="./ExternalLogins">External logins</a>
    }


    <a class="list-group-item list-group-item-action @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"
       asp-page="./TwoFactorAuthentication">Two-factor authentication</a>

    <a class="list-group-item list-group-item-action @ManageNavPages.PersonalDataNavClass(ViewContext)"
       asp-page="./PersonalData">Personal data</a>
    <a class="list-group-item list-group-item-action text-danger @ManageNavPages.DeletePersonalDataNavClass(ViewContext)"
       asp-page="./DeletePersonalData">Delete Account</a>
</div>
